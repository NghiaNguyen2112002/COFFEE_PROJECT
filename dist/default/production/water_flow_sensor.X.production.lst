

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Nov 26 07:45:17 2022

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000E                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0015                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  008C                     	;# 
    60  008E                     	;# 
    61  0092                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009F                     	;# 
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  0092                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009F                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  008C                     	;# 
   134  008E                     	;# 
   135  0092                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  008C                     	;# 
   171  008E                     	;# 
   172  0092                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009F                     	;# 
   180                           
   181                           	psect	idataBANK0
   182  02D8                     __pidataBANK0:	
   183                           
   184                           ;initializer for _buttonBuffer
   185  02D8  3401               	retlw	1
   186  02D9  3401               	retlw	1
   187  02DA  3401               	retlw	1
   188                           
   189                           ;initializer for _buttonInputMask
   190  02DB  3410               	retlw	16
   191  02DC  3420               	retlw	32
   192  02DD  3404               	retlw	4
   193                           
   194                           ;initializer for _time1_MUL
   195  02DE  3401               	retlw	1
   196  02DF  3400               	retlw	0
   197                           
   198                           ;initializer for _addressEEPROM_AUTO_1
   199  02E0  3401               	retlw	1
   200                           
   201                           	psect	nvBANK0
   202  0052                     __pnvBANK0:	
   203  0052                     _MAX_COUNTER_AUTO_0:	
   204  0052                     	ds	2
   205  0054                     _MAX_COUNTER_AUTO_1:	
   206  0054                     	ds	2
   207  0056                     _cleaning_counter:	
   208  0056                     	ds	1
   209  000E                     _TMR1	set	14
   210  001F                     _CMCON	set	31
   211  000B                     _INTCONbits	set	11
   212  000C                     _PIR1bits	set	12
   213  0005                     _PORTA	set	5
   214  0005                     _PORTAbits	set	5
   215  0006                     _PORTB	set	6
   216  0010                     _T1CONbits	set	16
   217  005F                     _GIE	set	95
   218  005E                     _PEIE	set	94
   219  0060                     _TMR1IF	set	96
   220  009B                     _EEADR	set	155
   221  009C                     _EECON1bits	set	156
   222  009D                     _EECON2	set	157
   223  009A                     _EEDATA	set	154
   224  0081                     _OPTION_REGbits	set	129
   225  0085                     _TRISA	set	133
   226  0460                     _TMR1IE	set	1120
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  0011                     start_initialization:	
   232  0011                     __initialization:	
   233                           
   234                           ; Clear objects allocated to COMMON
   235  0011  3079               	movlw	low __pbssCOMMON
   236  0012  0084               	movwf	4
   237  0013  307D               	movlw	low (__pbssCOMMON+4)
   238  0014  22E1               	fcall	clear_ram0
   239                           
   240                           ; Clear objects allocated to BANK0
   241  0015  1383               	bcf	3,7	;select IRP bank0
   242  0016  3020               	movlw	low __pbssBANK0
   243  0017  0084               	movwf	4
   244  0018  303A               	movlw	low (__pbssBANK0+26)
   245  0019  22E1               	fcall	clear_ram0
   246                           
   247                           ; Initialize objects allocated to BANK0
   248  001A  22D8               	fcall	__pidataBANK0	;fetch initializer
   249  001B  00C9               	movwf	__pdataBANK0& (0+127)
   250  001C  22D9               	fcall	__pidataBANK0+1	;fetch initializer
   251  001D  00CA               	movwf	(__pdataBANK0+1)& (0+127)
   252  001E  22DA               	fcall	__pidataBANK0+2	;fetch initializer
   253  001F  00CB               	movwf	(__pdataBANK0+2)& (0+127)
   254  0020  22DB               	fcall	__pidataBANK0+3	;fetch initializer
   255  0021  00CC               	movwf	(__pdataBANK0+3)& (0+127)
   256  0022  22DC               	fcall	__pidataBANK0+4	;fetch initializer
   257  0023  00CD               	movwf	(__pdataBANK0+4)& (0+127)
   258  0024  22DD               	fcall	__pidataBANK0+5	;fetch initializer
   259  0025  00CE               	movwf	(__pdataBANK0+5)& (0+127)
   260  0026  22DE               	fcall	__pidataBANK0+6	;fetch initializer
   261  0027  00CF               	movwf	(__pdataBANK0+6)& (0+127)
   262  0028  22DF               	fcall	__pidataBANK0+7	;fetch initializer
   263  0029  00D0               	movwf	(__pdataBANK0+7)& (0+127)
   264  002A  22E0               	fcall	__pidataBANK0+8	;fetch initializer
   265  002B  00D1               	movwf	(__pdataBANK0+8)& (0+127)
   266  002C                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  002C                     __end_of__initialization:	
   270  002C  0183               	clrf	3
   271  002D  282E               	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  0079                     __pbssCOMMON:	
   275  0079                     _state:	
   276  0079                     	ds	3
   277  007C                     _pumpState:	
   278  007C                     	ds	1
   279                           
   280                           	psect	bssBANK0
   281  0020                     __pbssBANK0:	
   282  0020                     _counterForButtonPress:	
   283  0020                     	ds	6
   284  0026                     _debounceButtonBuffer1:	
   285  0026                     	ds	3
   286  0029                     _debounceButtonBuffer2:	
   287  0029                     	ds	3
   288  002C                     _flagForButtonPress:	
   289  002C                     	ds	3
   290  002F                     _flagForButtonPress_s:	
   291  002F                     	ds	3
   292  0032                     _timer1_cnt:	
   293  0032                     	ds	2
   294  0034                     _timer1_value:	
   295  0034                     	ds	2
   296  0036                     _addressEEPROM_AUTO_0:	
   297  0036                     	ds	1
   298  0037                     _brewing_counter:	
   299  0037                     	ds	1
   300  0038                     _flag_timer1:	
   301  0038                     	ds	1
   302  0039                     _mode:	
   303  0039                     	ds	1
   304                           
   305                           	psect	dataBANK0
   306  0049                     __pdataBANK0:	
   307  0049                     _buttonBuffer:	
   308  0049                     	ds	3
   309  004C                     _buttonInputMask:	
   310  004C                     	ds	3
   311  004F                     _time1_MUL:	
   312  004F                     	ds	2
   313  0051                     _addressEEPROM_AUTO_1:	
   314  0051                     	ds	1
   315                           
   316                           	psect	clrtext
   317  02E1                     clear_ram0:	
   318                           ;	Called with FSR containing the base address, and
   319                           ;	W with the last address+1
   320                           
   321  02E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   322  02E2                     clrloop0:	
   323  02E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   324  02E3  0A84               	incf	4,f	;increment pointer
   325  02E4  0604               	xorwf	4,w	;XOR with final address
   326  02E5  1903               	btfsc	3,2	;have we reached the end yet?
   327  02E6  3400               	retlw	0	;all done for this memory range, return
   328  02E7  0604               	xorwf	4,w	;XOR again to restore value
   329  02E8  2AE2               	goto	clrloop0	;do the next byte
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:	
   333  0070                     ?_stop_timer1:	
   334  0070                     ??_stop_timer1:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_start_timer1:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_start_timer1:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_timer1_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_timer1_isr:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_button_reading:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_button_reading:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_InitSystem:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_is_button_pressed:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_is_button_pressed_s:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_ReadEEPROM:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_RelayOn:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_ISR:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376                           
   377                           ; 1 bytes @ 0x0
   378  0070                     	ds	3
   379  0073                     button_reading@i:	
   380                           
   381                           ; 1 bytes @ 0x3
   382  0073                     	ds	1
   383  0074                     ??_ISR:	
   384                           
   385                           ; 1 bytes @ 0x4
   386  0074                     	ds	5
   387                           
   388                           	psect	cstackBANK0
   389  003A                     __pcstackBANK0:	
   390  003A                     ??_is_button_pressed:	
   391  003A                     ??_is_button_pressed_s:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  003A                     ?_WriteEEPROM:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  003A                     ?_Delay_ms:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  003A                     ??_ReadEEPROM:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  003A                     ??_RelayOn:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  003A                     ?_init_timer1:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  003A                     ?___awdiv:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  003A                     RelayOn@flag:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  003A                     ReadEEPROM@address:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  003A                     WriteEEPROM@data:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  003A                     is_button_pressed@index:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  003A                     is_button_pressed_s@index:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  003A                     Delay_ms@delay:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  003A                     init_timer1@count:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  003A                     ___awdiv@divisor:	
   434                           ; 2 bytes @ 0x0
   435                           
   436                           
   437                           ; 2 bytes @ 0x0
   438  003A                     	ds	1
   439  003B                     ??_WriteEEPROM:	
   440  003B                     WriteEEPROM@address:	
   441                           ; 1 bytes @ 0x1
   442                           
   443                           
   444                           ; 1 bytes @ 0x1
   445  003B                     	ds	1
   446  003C                     ??_Delay_ms:	
   447  003C                     ??_init_timer1:	
   448                           ; 1 bytes @ 0x2
   449                           
   450  003C                     Delay_ms@i:	
   451                           ; 1 bytes @ 0x2
   452                           
   453  003C                     ___awdiv@dividend:	
   454                           ; 2 bytes @ 0x2
   455                           
   456                           
   457                           ; 2 bytes @ 0x2
   458  003C                     	ds	2
   459  003E                     ??___awdiv:	
   460  003E                     Delay_ms@j:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 2 bytes @ 0x4
   465  003E                     	ds	1
   466  003F                     ___awdiv@counter:	
   467                           
   468                           ; 1 bytes @ 0x5
   469  003F                     	ds	1
   470  0040                     ___awdiv@sign:	
   471                           
   472                           ; 1 bytes @ 0x6
   473  0040                     	ds	1
   474  0041                     ___awdiv@quotient:	
   475                           
   476                           ; 2 bytes @ 0x7
   477  0041                     	ds	2
   478  0043                     ?_SetTimer1_ms:	
   479  0043                     SetTimer1_ms@time:	
   480                           ; 1 bytes @ 0x9
   481                           
   482                           
   483                           ; 2 bytes @ 0x9
   484  0043                     	ds	2
   485  0045                     ??_InitSystem:	
   486  0045                     ??_SetTimer1_ms:	
   487                           ; 1 bytes @ 0xB
   488                           
   489                           
   490                           ; 1 bytes @ 0xB
   491  0045                     	ds	2
   492  0047                     ??_main:	
   493                           
   494                           ; 1 bytes @ 0xD
   495  0047                     	ds	2
   496                           
   497                           	psect	maintext
   498  002E                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 46 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   518 ;;      Params:         0       0       0       0
   519 ;;      Locals:         0       0       0       0
   520 ;;      Temps:          0       2       0       0
   521 ;;      Totals:         0       2       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		_Delay_ms
   526 ;;		_InitSystem
   527 ;;		_SetTimer1_ms
   528 ;;		_WriteEEPROM
   529 ;;		_is_button_pressed
   530 ;;		_is_button_pressed_s
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  002E                     _main:	
   539                           
   540                           ;main.c: 47: InitSystem();
   541                           
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544  002E  21B5               	fcall	_InitSystem
   545                           
   546                           ;main.c: 50: switch(mode){
   547                           
   548                           ;main.c: 49: while(1){
   549  002F  28D4               	goto	l1324
   550  0030                     l1244:	
   551                           ;main.c: 51: case INIT:
   552                           
   553                           
   554                           ;main.c: 52: brewing_counter = 0;
   555  0030  1283               	bcf	3,5	;RP0=0, select bank0
   556  0031  1303               	bcf	3,6	;RP1=0, select bank0
   557  0032  01B7               	clrf	_brewing_counter
   558                           
   559                           ;main.c: 54: if(is_button_pressed(0)){
   560  0033  3000               	movlw	0
   561  0034  22B5               	fcall	_is_button_pressed
   562  0035  3A00               	xorlw	0
   563  0036  1903               	skipnz
   564  0037  283A               	goto	l1250
   565                           
   566                           ;main.c: 55: mode = BREWING_0;
   567  0038  3003               	movlw	3
   568  0039  2851               	goto	L2
   569  003A                     l1250:	
   570                           ;main.c: 56: }
   571                           
   572                           
   573                           ;main.c: 57: else if(is_button_pressed(1)){
   574  003A  3001               	movlw	1
   575  003B  22B5               	fcall	_is_button_pressed
   576  003C  3A00               	xorlw	0
   577  003D  1903               	skipnz
   578  003E  2841               	goto	l1254
   579                           
   580                           ;main.c: 58: mode = BREWING_1;
   581  003F  3004               	movlw	4
   582  0040  2851               	goto	L2
   583  0041                     l1254:	
   584                           ;main.c: 59: }
   585                           
   586                           
   587                           ;main.c: 60: else if(is_button_pressed_s(0)){
   588  0041  3000               	movlw	0
   589  0042  22A6               	fcall	_is_button_pressed_s
   590  0043  3A00               	xorlw	0
   591  0044  1903               	skipnz
   592  0045  284B               	goto	l1258
   593                           
   594                           ;main.c: 61: mode = ADJUSTING_AUTO_0;
   595  0046  1283               	bcf	3,5	;RP0=0, select bank0
   596  0047  1303               	bcf	3,6	;RP1=0, select bank0
   597  0048  01B9               	clrf	_mode
   598  0049  0AB9               	incf	_mode,f
   599                           
   600                           ;main.c: 62: }
   601  004A  28CD               	goto	l1326
   602  004B                     l1258:	
   603                           
   604                           ;main.c: 63: else if(is_button_pressed_s(1)){
   605  004B  3001               	movlw	1
   606  004C  22A6               	fcall	_is_button_pressed_s
   607  004D  3A00               	xorlw	0
   608  004E  1903               	skipnz
   609  004F  2854               	goto	l1262
   610                           
   611                           ;main.c: 64: mode = ADJUSTING_AUTO_1;
   612  0050  3002               	movlw	2
   613  0051                     L2:	
   614  0051  1283               	bcf	3,5	;RP0=0, select bank0
   615  0052  1303               	bcf	3,6	;RP1=0, select bank0
   616  0053  2860               	goto	L3
   617  0054                     l1262:	
   618                           ;main.c: 65: }
   619                           
   620                           
   621                           ;main.c: 66: else if(is_button_pressed(2)){
   622  0054  3002               	movlw	2
   623  0055  22B5               	fcall	_is_button_pressed
   624  0056  3A00               	xorlw	0
   625  0057  1903               	skipnz
   626  0058  28CD               	goto	l1326
   627                           
   628                           ;main.c: 67: cleaning_counter = 10;
   629  0059  300A               	movlw	10
   630  005A  1283               	bcf	3,5	;RP0=0, select bank0
   631  005B  1303               	bcf	3,6	;RP1=0, select bank0
   632  005C  00C7               	movwf	??_main
   633  005D  0847               	movf	??_main,w
   634  005E  00D6               	movwf	_cleaning_counter
   635                           
   636                           ;main.c: 68: mode = AUTO_CLEANING;
   637  005F  3005               	movlw	5
   638  0060                     L3:	
   639  0060  00C7               	movwf	??_main
   640  0061  0847               	movf	??_main,w
   641  0062  00B9               	movwf	_mode
   642                           
   643                           ;main.c: 69: }
   644                           ;main.c: 70: break;
   645  0063  28CD               	goto	l1326
   646  0064                     l1266:	
   647                           ;main.c: 71: case ADJUSTING_AUTO_0:
   648                           
   649                           
   650                           ;main.c: 72: if(is_button_pressed(0)){
   651  0064  3000               	movlw	0
   652  0065  22B5               	fcall	_is_button_pressed
   653  0066  3A00               	xorlw	0
   654  0067  1903               	skipnz
   655  0068  28CD               	goto	l1326
   656                           
   657                           ;main.c: 73: MAX_COUNTER_AUTO_0 = brewing_counter;
   658  0069  1283               	bcf	3,5	;RP0=0, select bank0
   659  006A  1303               	bcf	3,6	;RP1=0, select bank0
   660  006B  0837               	movf	_brewing_counter,w
   661  006C  00C7               	movwf	??_main
   662  006D  01C8               	clrf	??_main+1
   663  006E  0847               	movf	??_main,w
   664  006F  00D2               	movwf	_MAX_COUNTER_AUTO_0
   665  0070  0848               	movf	??_main+1,w
   666  0071  00D3               	movwf	_MAX_COUNTER_AUTO_0+1
   667                           
   668                           ;main.c: 74: WriteEEPROM(addressEEPROM_AUTO_0, MAX_COUNTER_AUTO_0);
   669  0072  0852               	movf	_MAX_COUNTER_AUTO_0,w
   670  0073  00C7               	movwf	??_main
   671  0074  0847               	movf	??_main,w
   672  0075  00BA               	movwf	WriteEEPROM@data
   673  0076  0836               	movf	_addressEEPROM_AUTO_0,w
   674  0077  2262               	fcall	_WriteEEPROM
   675  0078  28CA               	goto	l1318
   676  0079                     l1274:	
   677                           ;main.c: 78: case ADJUSTING_AUTO_1:
   678                           
   679                           ;main.c: 76: }
   680                           ;main.c: 77: break;
   681                           
   682                           ;main.c: 75: mode = INIT;
   683                           
   684                           
   685                           ;main.c: 79: if(is_button_pressed(1)){
   686  0079  3001               	movlw	1
   687  007A  22B5               	fcall	_is_button_pressed
   688  007B  3A00               	xorlw	0
   689  007C  1903               	skipnz
   690  007D  28CD               	goto	l1326
   691                           
   692                           ;main.c: 80: MAX_COUNTER_AUTO_1 = brewing_counter;
   693  007E  1283               	bcf	3,5	;RP0=0, select bank0
   694  007F  1303               	bcf	3,6	;RP1=0, select bank0
   695  0080  0837               	movf	_brewing_counter,w
   696  0081  00C7               	movwf	??_main
   697  0082  01C8               	clrf	??_main+1
   698  0083  0847               	movf	??_main,w
   699  0084  00D4               	movwf	_MAX_COUNTER_AUTO_1
   700  0085  0848               	movf	??_main+1,w
   701  0086  00D5               	movwf	_MAX_COUNTER_AUTO_1+1
   702                           
   703                           ;main.c: 81: WriteEEPROM(addressEEPROM_AUTO_1, MAX_COUNTER_AUTO_1);
   704  0087  0854               	movf	_MAX_COUNTER_AUTO_1,w
   705  0088  00C7               	movwf	??_main
   706  0089  0847               	movf	??_main,w
   707  008A  00BA               	movwf	WriteEEPROM@data
   708  008B  0851               	movf	_addressEEPROM_AUTO_1,w
   709  008C  2262               	fcall	_WriteEEPROM
   710  008D  28CA               	goto	l1318
   711  008E                     l97:	
   712                           ;main.c: 85: case BREWING_0:
   713                           
   714                           ;main.c: 83: }
   715                           ;main.c: 84: break;
   716                           
   717                           ;main.c: 82: mode = INIT;
   718                           
   719                           
   720                           ;main.c: 86: PORTAbits.RA3 = 1;
   721  008E  1585               	bsf	5,3	;volatile
   722                           
   723                           ;main.c: 87: if(brewing_counter > MAX_COUNTER_AUTO_0) mode = INIT;
   724  008F  0837               	movf	_brewing_counter,w
   725  0090  00C7               	movwf	??_main
   726  0091  01C8               	clrf	??_main+1
   727  0092  0848               	movf	??_main+1,w
   728  0093  0253               	subwf	_MAX_COUNTER_AUTO_0+1,w
   729  0094  1D03               	skipz
   730  0095  2898               	goto	u815
   731  0096  0847               	movf	??_main,w
   732  0097  0252               	subwf	_MAX_COUNTER_AUTO_0,w
   733  0098                     u815:	
   734  0098  1C03               	btfss	3,0
   735  0099  01B9               	clrf	_mode
   736                           
   737                           ;main.c: 88: if(is_button_pressed(0)) mode = INIT;
   738  009A  3000               	movlw	0
   739  009B  28C6               	goto	L4
   740  009C                     l100:	
   741                           ;main.c: 91: case BREWING_1:
   742                           
   743                           ;main.c: 90: break;
   744                           
   745                           
   746                           ;main.c: 92: PORTAbits.RA3 = 1;
   747  009C  1585               	bsf	5,3	;volatile
   748                           
   749                           ;main.c: 93: if(brewing_counter > MAX_COUNTER_AUTO_1) mode = INIT;
   750  009D  0837               	movf	_brewing_counter,w
   751  009E  00C7               	movwf	??_main
   752  009F  01C8               	clrf	??_main+1
   753  00A0  0848               	movf	??_main+1,w
   754  00A1  0255               	subwf	_MAX_COUNTER_AUTO_1+1,w
   755  00A2  1D03               	skipz
   756  00A3  28A6               	goto	u835
   757  00A4  0847               	movf	??_main,w
   758  00A5  0254               	subwf	_MAX_COUNTER_AUTO_1,w
   759  00A6                     u835:	
   760  00A6  1C03               	btfss	3,0
   761  00A7  01B9               	clrf	_mode
   762                           
   763                           ;main.c: 94: if(is_button_pressed(1)) mode = INIT;
   764  00A8  3001               	movlw	1
   765  00A9  28C6               	goto	L4
   766  00AA                     l1298:	
   767                           ;main.c: 97: case AUTO_CLEANING:
   768                           
   769                           ;main.c: 96: break;
   770                           
   771                           
   772                           ;main.c: 98: if(flag_timer1){
   773  00AA  0838               	movf	_flag_timer1,w
   774  00AB  1903               	btfsc	3,2
   775  00AC  28C2               	goto	l1312
   776                           
   777                           ;main.c: 99: if(PORTAbits.RA3 == 1){
   778  00AD  1D85               	btfss	5,3	;volatile
   779  00AE  28B8               	goto	l1306
   780                           
   781                           ;main.c: 100: SetTimer1_ms(10000);
   782  00AF  3010               	movlw	16
   783  00B0  00C3               	movwf	SetTimer1_ms@time
   784  00B1  3027               	movlw	39
   785  00B2  00C4               	movwf	SetTimer1_ms@time+1
   786  00B3  227C               	fcall	_SetTimer1_ms
   787                           
   788                           ;main.c: 101: PORTAbits.RA3 = 0;
   789  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   790  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   791  00B6  1185               	bcf	5,3	;volatile
   792                           
   793                           ;main.c: 102: }
   794  00B7  28C2               	goto	l1312
   795  00B8                     l1306:	
   796                           
   797                           ;main.c: 103: else {
   798                           ;main.c: 104: cleaning_counter--;
   799  00B8  3001               	movlw	1
   800  00B9  02D6               	subwf	_cleaning_counter,f
   801                           
   802                           ;main.c: 105: SetTimer1_ms(2000);
   803  00BA  30D0               	movlw	208
   804  00BB  00C3               	movwf	SetTimer1_ms@time
   805  00BC  3007               	movlw	7
   806  00BD  00C4               	movwf	SetTimer1_ms@time+1
   807  00BE  227C               	fcall	_SetTimer1_ms
   808                           
   809                           ;main.c: 106: PORTAbits.RA3 = 1;
   810  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   811  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   812  00C1  1585               	bsf	5,3	;volatile
   813  00C2                     l1312:	
   814                           
   815                           ;main.c: 107: }
   816                           ;main.c: 108: }
   817                           ;main.c: 109: if(cleaning_counter == 0) mode = INIT;
   818  00C2  0856               	movf	_cleaning_counter,w
   819  00C3  1903               	btfsc	3,2
   820  00C4  01B9               	clrf	_mode
   821                           
   822                           ;main.c: 110: if(is_button_pressed(2)){
   823  00C5  3002               	movlw	2
   824  00C6                     L4:	
   825  00C6  22B5               	fcall	_is_button_pressed
   826  00C7  3A00               	xorlw	0
   827  00C8  1903               	skipnz
   828  00C9  28CD               	goto	l1326
   829  00CA                     l1318:	
   830                           
   831                           ;main.c: 111: mode = INIT;
   832  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   833  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   834  00CC                     l1320:	
   835                           ;main.c: 114: default:
   836                           
   837                           ;main.c: 112: }
   838                           ;main.c: 113: break;
   839                           
   840                           
   841                           ;main.c: 115: mode = INIT;
   842  00CC  01B9               	clrf	_mode
   843  00CD                     l1326:	
   844                           ;main.c: 117: }
   845                           
   846                           ;main.c: 116: break;
   847                           
   848                           
   849                           ;main.c: 118: Delay_ms(3);
   850  00CD  3003               	movlw	3
   851  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   852  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   853  00D0  00BA               	movwf	Delay_ms@delay
   854  00D1  3000               	movlw	0
   855  00D2  00BB               	movwf	Delay_ms@delay+1
   856  00D3  21F3               	fcall	_Delay_ms
   857  00D4                     l1324:	
   858  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   859  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   860  00D6  0839               	movf	_mode,w
   861                           
   862                           ; Switch size 1, requested type "space"
   863                           ; Number of cases is 6, Range of values is 0 to 5
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; direct_byte           12     6 (fixed)
   867                           ; simple_byte           19    10 (average)
   868                           ; jumptable            260     6 (fixed)
   869                           ;	Chosen strategy is direct_byte
   870  00D7  0084               	movwf	4
   871  00D8  3006               	movlw	6
   872  00D9  0204               	subwf	4,w
   873  00DA  1803               	skipnc
   874  00DB  28CC               	goto	l1320
   875  00DC  3002               	movlw	high S1388
   876  00DD  008A               	movwf	10
   877  00DE  30F1               	movlw	low S1388
   878  00DF  0704               	addwf	4,w
   879  00E0  0082               	movwf	2
   880  00E1  28CD               	goto	l1326
   881  00E2                     __end_of_main:	
   882                           ;main.c: 119: }
   883                           ;main.c: 120: return;
   884                           
   885                           
   886                           	psect	swtext1
   887  02F1                     __pswtext1:	
   888  02F1                     S1388:	
   889  02F1  2830               	ljmp	l1244
   890  02F2  2864               	ljmp	l1266
   891  02F3  2879               	ljmp	l1274
   892  02F4  288E               	ljmp	l97
   893  02F5  289C               	ljmp	l100
   894  02F6  28AA               	ljmp	l1298
   895                           
   896                           	psect	text1
   897  02A6                     __ptext1:	
   898 ;; *************** function _is_button_pressed_s *****************
   899 ;; Defined at:
   900 ;;		line 52 in file "button.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  index           1    wreg     unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  index           1    0[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      unsigned char 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   914 ;;      Params:         0       0       0       0
   915 ;;      Locals:         0       1       0       0
   916 ;;      Temps:          0       0       0       0
   917 ;;      Totals:         0       1       0       0
   918 ;;Total ram usage:        1 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    2
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;;		_fsm_button_processing
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _is_button_pressed_s
   931  02A6                     _is_button_pressed_s:	
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _is_button_pressed_s: [wreg-fsr0h+status,2+status,0]
   935                           ;is_button_pressed_s@index stored from wreg
   936  02A6  1283               	bcf	3,5	;RP0=0, select bank0
   937  02A7  1303               	bcf	3,6	;RP1=0, select bank0
   938  02A8  00BA               	movwf	is_button_pressed_s@index
   939                           
   940                           ;button.c: 53: if(index >= 3) return 0xFF;
   941  02A9  3003               	movlw	3
   942  02AA  023A               	subwf	is_button_pressed_s@index,w
   943  02AB  1C03               	skipc
   944  02AC  2AAF               	goto	l1196
   945  02AD  30FF               	movlw	255
   946  02AE  0008               	return
   947  02AF                     l1196:	
   948                           
   949                           ;button.c: 54: return flagForButtonPress_s[index];
   950  02AF  083A               	movf	is_button_pressed_s@index,w
   951  02B0  3E2F               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
   952  02B1  0084               	movwf	4
   953  02B2  1383               	bcf	3,7	;select IRP bank0
   954  02B3  0800               	movf	0,w
   955  02B4  0008               	return
   956  02B5                     __end_of_is_button_pressed_s:	
   957                           
   958                           	psect	text2
   959  02B5                     __ptext2:	
   960 ;; *************** function _is_button_pressed *****************
   961 ;; Defined at:
   962 ;;		line 47 in file "button.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  index           1    wreg     unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  index           1    0[BANK0 ] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      unsigned char 
   969 ;; Registers used:
   970 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   976 ;;      Params:         0       0       0       0
   977 ;;      Locals:         0       1       0       0
   978 ;;      Temps:          0       0       0       0
   979 ;;      Totals:         0       1       0       0
   980 ;;Total ram usage:        1 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    2
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;;		_fsm_button_processing
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _is_button_pressed
   993  02B5                     _is_button_pressed:	
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _is_button_pressed: [wreg-fsr0h+status,2+status,0]
   997                           ;is_button_pressed@index stored from wreg
   998  02B5  1283               	bcf	3,5	;RP0=0, select bank0
   999  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1000  02B7  00BA               	movwf	is_button_pressed@index
  1001                           
  1002                           ;button.c: 48: if(index >= 3) return 0;
  1003  02B8  3003               	movlw	3
  1004  02B9  023A               	subwf	is_button_pressed@index,w
  1005  02BA  1C03               	skipc
  1006  02BB  2ABE               	goto	l1186
  1007  02BC  3000               	movlw	0
  1008  02BD  0008               	return
  1009  02BE                     l1186:	
  1010                           
  1011                           ;button.c: 50: return flagForButtonPress[index];
  1012  02BE  083A               	movf	is_button_pressed@index,w
  1013  02BF  3E2C               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  1014  02C0  0084               	movwf	4
  1015  02C1  1383               	bcf	3,7	;select IRP bank0
  1016  02C2  0800               	movf	0,w
  1017  02C3  0008               	return
  1018  02C4                     __end_of_is_button_pressed:	
  1019                           
  1020                           	psect	text3
  1021  0262                     __ptext3:	
  1022 ;; *************** function _WriteEEPROM *****************
  1023 ;; Defined at:
  1024 ;;		line 167 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  address         1    wreg     unsigned char 
  1027 ;;  data            1    0[BANK0 ] unsigned char 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  address         1    1[BANK0 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1039 ;;      Params:         0       1       0       0
  1040 ;;      Locals:         0       1       0       0
  1041 ;;      Temps:          0       0       0       0
  1042 ;;      Totals:         0       2       0       0
  1043 ;;Total ram usage:        2 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    2
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _WriteEEPROM
  1055  0262                     _WriteEEPROM:	
  1056                           
  1057                           ;incstack = 0
  1058                           ; Regs used in _WriteEEPROM: [wreg]
  1059                           ;WriteEEPROM@address stored from wreg
  1060  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0264  00BB               	movwf	WriteEEPROM@address
  1063                           
  1064                           ;main.c: 168: EEADR = address;
  1065  0265  083B               	movf	WriteEEPROM@address,w
  1066  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1067  0267  1303               	bcf	3,6	;RP1=0, select bank1
  1068  0268  009B               	movwf	27	;volatile
  1069                           
  1070                           ;main.c: 169: EEDATA = data;
  1071  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1072  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1073  026B  083A               	movf	WriteEEPROM@data,w
  1074  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1075  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1076  026E  009A               	movwf	26	;volatile
  1077                           
  1078                           ;main.c: 170: EECON1bits.WREN = 1;
  1079  026F  151C               	bsf	28,2	;volsfr
  1080                           
  1081                           ;main.c: 171: INTCONbits.GIE = 0;
  1082  0270  138B               	bcf	11,7	;volatile
  1083                           
  1084                           ;main.c: 172: EECON2=0x55;
  1085  0271  3055               	movlw	85
  1086  0272  009D               	movwf	29	;volsfr
  1087                           
  1088                           ;main.c: 173: EECON2=0xAA;
  1089  0273  30AA               	movlw	170
  1090  0274  009D               	movwf	29	;volsfr
  1091                           
  1092                           ;main.c: 174: EECON1bits.WR = 1;
  1093  0275  149C               	bsf	28,1	;volsfr
  1094                           
  1095                           ;main.c: 175: INTCONbits.GIE = 1;
  1096  0276  178B               	bsf	11,7	;volatile
  1097  0277                     l134:	
  1098                           ;main.c: 177: while(PIR1bits.EEIF == 0);
  1099                           
  1100  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0278  1F8C               	btfss	12,7	;volatile
  1102  0279  2A77               	goto	l134
  1103                           
  1104                           ;main.c: 178: PIR1bits.EEIF = 0;
  1105  027A  138C               	bcf	12,7	;volatile
  1106  027B  0008               	return
  1107  027C                     __end_of_WriteEEPROM:	
  1108                           
  1109                           	psect	text4
  1110  01B5                     __ptext4:	
  1111 ;; *************** function _InitSystem *****************
  1112 ;; Defined at:
  1113 ;;		line 123 in file "main.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1127 ;;      Params:         0       0       0       0
  1128 ;;      Locals:         0       0       0       0
  1129 ;;      Temps:          0       2       0       0
  1130 ;;      Totals:         0       2       0       0
  1131 ;;Total ram usage:        2 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    4
  1134 ;; This function calls:
  1135 ;;		_ReadEEPROM
  1136 ;;		_RelayOn
  1137 ;;		_SetTimer1_ms
  1138 ;;		_init_timer1
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           
  1145                           ;psect for function _InitSystem
  1146  01B5                     _InitSystem:	
  1147                           
  1148                           ;main.c: 124: CMCON = 0x07;
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _InitSystem: [wreg+status,2+status,0+pclath+cstack]
  1152  01B5  3007               	movlw	7
  1153  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1154  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1155  01B8  009F               	movwf	31	;volatile
  1156                           
  1157                           ;main.c: 126: OPTION_REGbits.nRBPU = 0;
  1158  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  1159  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  1160  01BB  1381               	bcf	1,7	;volatile
  1161                           
  1162                           ;main.c: 127: OPTION_REGbits.INTEDG = 1;
  1163  01BC  1701               	bsf	1,6	;volatile
  1164                           
  1165                           ;main.c: 129: INTCONbits.INTE = 1;
  1166  01BD  160B               	bsf	11,4	;volatile
  1167                           
  1168                           ;main.c: 130: TRISA = 0b00110100;
  1169  01BE  3034               	movlw	52
  1170  01BF  0085               	movwf	5	;volatile
  1171                           
  1172                           ;main.c: 131: PORTA = 0xFF;
  1173  01C0  30FF               	movlw	255
  1174  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1175  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1176  01C3  0085               	movwf	5	;volatile
  1177                           
  1178                           ;main.c: 133: PORTB = 0b00000001;
  1179  01C4  3001               	movlw	1
  1180  01C5  0086               	movwf	6	;volatile
  1181                           
  1182                           ;main.c: 134: PORTB = 0xFF;
  1183  01C6  30FF               	movlw	255
  1184  01C7  0086               	movwf	6	;volatile
  1185                           
  1186                           ;main.c: 135: brewing_counter = 0;
  1187  01C8  01B7               	clrf	_brewing_counter
  1188                           
  1189                           ;main.c: 136: cleaning_counter = 10;
  1190  01C9  300A               	movlw	10
  1191  01CA  00C5               	movwf	??_InitSystem
  1192  01CB  0845               	movf	??_InitSystem,w
  1193  01CC  00D6               	movwf	_cleaning_counter
  1194                           
  1195                           ;main.c: 138: mode = INIT;
  1196  01CD  01B9               	clrf	_mode
  1197                           
  1198                           ;main.c: 140: MAX_COUNTER_AUTO_0 = ReadEEPROM(addressEEPROM_AUTO_0);
  1199  01CE  0836               	movf	_addressEEPROM_AUTO_0,w
  1200  01CF  22CE               	fcall	_ReadEEPROM
  1201  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1202  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1203  01D2  00C5               	movwf	??_InitSystem
  1204  01D3  01C6               	clrf	??_InitSystem+1
  1205  01D4  0845               	movf	??_InitSystem,w
  1206  01D5  00D2               	movwf	_MAX_COUNTER_AUTO_0
  1207  01D6  0846               	movf	??_InitSystem+1,w
  1208  01D7  00D3               	movwf	_MAX_COUNTER_AUTO_0+1
  1209                           
  1210                           ;main.c: 141: MAX_COUNTER_AUTO_1 = ReadEEPROM(addressEEPROM_AUTO_1);
  1211  01D8  0851               	movf	_addressEEPROM_AUTO_1,w
  1212  01D9  22CE               	fcall	_ReadEEPROM
  1213  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01DC  00C5               	movwf	??_InitSystem
  1216  01DD  01C6               	clrf	??_InitSystem+1
  1217  01DE  0845               	movf	??_InitSystem,w
  1218  01DF  00D4               	movwf	_MAX_COUNTER_AUTO_1
  1219  01E0  0846               	movf	??_InitSystem+1,w
  1220  01E1  00D5               	movwf	_MAX_COUNTER_AUTO_1+1
  1221                           
  1222                           ;main.c: 142: RelayOn(0);
  1223  01E2  3000               	movlw	0
  1224  01E3  22C4               	fcall	_RelayOn
  1225                           
  1226                           ;main.c: 144: init_timer1(10000);
  1227  01E4  3010               	movlw	16
  1228  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1229  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1230  01E7  00BA               	movwf	init_timer1@count
  1231  01E8  3027               	movlw	39
  1232  01E9  00BB               	movwf	init_timer1@count+1
  1233  01EA  221C               	fcall	_init_timer1
  1234                           
  1235                           ;main.c: 145: SetTimer1_ms(1000);
  1236  01EB  30E8               	movlw	232
  1237  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1238  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1239  01EE  00C3               	movwf	SetTimer1_ms@time
  1240  01EF  3003               	movlw	3
  1241  01F0  00C4               	movwf	SetTimer1_ms@time+1
  1242  01F1  227C               	fcall	_SetTimer1_ms
  1243  01F2  0008               	return
  1244  01F3                     __end_of_InitSystem:	
  1245                           
  1246                           	psect	text5
  1247  021C                     __ptext5:	
  1248 ;; *************** function _init_timer1 *****************
  1249 ;; Defined at:
  1250 ;;		line 8 in file "timer.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  count           2    0[BANK0 ] unsigned int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1264 ;;      Params:         0       2       0       0
  1265 ;;      Locals:         0       0       0       0
  1266 ;;      Temps:          0       2       0       0
  1267 ;;      Totals:         0       4       0       0
  1268 ;;Total ram usage:        4 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    2
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_InitSystem
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _init_timer1
  1280  021C                     _init_timer1:	
  1281                           
  1282                           ;timer.c: 10: T1CONbits.TMR1ON = 0;
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _init_timer1: [wreg+status,2+status,0]
  1286  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1287  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1288  021E  1010               	bcf	16,0	;volatile
  1289                           
  1290                           ;timer.c: 11: timer1_value = 65535 - count;
  1291  021F  093A               	comf	init_timer1@count,w
  1292  0220  00BC               	movwf	??_init_timer1
  1293  0221  093B               	comf	init_timer1@count+1,w
  1294  0222  00BD               	movwf	??_init_timer1+1
  1295  0223  0ABC               	incf	??_init_timer1,f
  1296  0224  1903               	skipnz
  1297  0225  0ABD               	incf	??_init_timer1+1,f
  1298  0226  083C               	movf	??_init_timer1,w
  1299  0227  3EFF               	addlw	255
  1300  0228  00B4               	movwf	_timer1_value
  1301  0229  083D               	movf	??_init_timer1+1,w
  1302  022A  1803               	skipnc
  1303  022B  3E01               	addlw	1
  1304  022C  3EFF               	addlw	255
  1305  022D  00B5               	movwf	_timer1_value+1
  1306                           
  1307                           ;timer.c: 12: TMR1 = timer1_value;
  1308  022E  0835               	movf	_timer1_value+1,w
  1309  022F  008F               	movwf	15	;volatile
  1310  0230  0834               	movf	_timer1_value,w
  1311  0231  008E               	movwf	14	;volatile
  1312                           
  1313                           ;timer.c: 14: T1CONbits.TMR1CS = 0;
  1314  0232  1090               	bcf	16,1	;volatile
  1315                           
  1316                           ;timer.c: 16: T1CONbits.T1CKPS0 = 0;
  1317  0233  1210               	bcf	16,4	;volatile
  1318                           
  1319                           ;timer.c: 17: T1CONbits.T1CKPS1 = 0;
  1320  0234  1290               	bcf	16,5	;volatile
  1321                           
  1322                           ;timer.c: 19: TMR1IF = 0;
  1323  0235  100C               	bcf	12,0	;volatile
  1324                           
  1325                           ;timer.c: 20: TMR1IE = 1;
  1326  0236  1683               	bsf	3,5	;RP0=1, select bank1
  1327  0237  1303               	bcf	3,6	;RP1=0, select bank1
  1328  0238  140C               	bsf	12,0	;volatile
  1329                           
  1330                           ;timer.c: 21: GIE = 1;
  1331  0239  178B               	bsf	11,7	;volatile
  1332                           
  1333                           ;timer.c: 22: PEIE = 1;
  1334  023A  170B               	bsf	11,6	;volatile
  1335                           
  1336                           ;timer.c: 23: T1CONbits.TMR1ON = 1;
  1337  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1338  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1339  023D  1410               	bsf	16,0	;volatile
  1340  023E  0008               	return
  1341  023F                     __end_of_init_timer1:	
  1342                           
  1343                           	psect	text6
  1344  027C                     __ptext6:	
  1345 ;; *************** function _SetTimer1_ms *****************
  1346 ;; Defined at:
  1347 ;;		line 47 in file "timer.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  time            2    9[BANK0 ] int 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, pclath, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1361 ;;      Params:         0       2       0       0
  1362 ;;      Locals:         0       0       0       0
  1363 ;;      Temps:          0       0       0       0
  1364 ;;      Totals:         0       2       0       0
  1365 ;;Total ram usage:        2 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    3
  1368 ;; This function calls:
  1369 ;;		___awdiv
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;;		_InitSystem
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _SetTimer1_ms
  1378  027C                     _SetTimer1_ms:	
  1379                           
  1380                           ;timer.c: 49: time1_MUL = time/10;
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _SetTimer1_ms: [wreg+status,2+status,0+pclath+cstack]
  1384  027C  300A               	movlw	10
  1385  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1386  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1387  027F  00BA               	movwf	___awdiv@divisor
  1388  0280  3000               	movlw	0
  1389  0281  00BB               	movwf	___awdiv@divisor+1
  1390  0282  0844               	movf	SetTimer1_ms@time+1,w
  1391  0283  00BD               	movwf	___awdiv@dividend+1
  1392  0284  0843               	movf	SetTimer1_ms@time,w
  1393  0285  00BC               	movwf	___awdiv@dividend
  1394  0286  215A               	fcall	___awdiv
  1395  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0289  083B               	movf	?___awdiv+1,w
  1398  028A  00D0               	movwf	_time1_MUL+1
  1399  028B  083A               	movf	?___awdiv,w
  1400  028C  00CF               	movwf	_time1_MUL
  1401                           
  1402                           ;timer.c: 50: timer1_cnt = 0;
  1403  028D  01B2               	clrf	_timer1_cnt
  1404  028E  01B3               	clrf	_timer1_cnt+1
  1405                           
  1406                           ;timer.c: 51: flag_timer1 = 0;
  1407  028F  01B8               	clrf	_flag_timer1
  1408  0290  0008               	return
  1409  0291                     __end_of_SetTimer1_ms:	
  1410                           
  1411                           	psect	text7
  1412  015A                     __ptext7:	
  1413 ;; *************** function ___awdiv *****************
  1414 ;; Defined at:
  1415 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  divisor         2    0[BANK0 ] int 
  1418 ;;  dividend        2    2[BANK0 ] int 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  quotient        2    7[BANK0 ] int 
  1421 ;;  sign            1    6[BANK0 ] unsigned char 
  1422 ;;  counter         1    5[BANK0 ] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    0[BANK0 ] int 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1432 ;;      Params:         0       4       0       0
  1433 ;;      Locals:         0       4       0       0
  1434 ;;      Temps:          0       1       0       0
  1435 ;;      Totals:         0       9       0       0
  1436 ;;Total ram usage:        9 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_SetTimer1_ms
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function ___awdiv
  1448  015A                     ___awdiv:	
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1452  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1453  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1454  015C  01C0               	clrf	___awdiv@sign
  1455  015D  1FBB               	btfss	___awdiv@divisor+1,7
  1456  015E  2966               	goto	l1050
  1457  015F  09BA               	comf	___awdiv@divisor,f
  1458  0160  09BB               	comf	___awdiv@divisor+1,f
  1459  0161  0ABA               	incf	___awdiv@divisor,f
  1460  0162  1903               	skipnz
  1461  0163  0ABB               	incf	___awdiv@divisor+1,f
  1462  0164  01C0               	clrf	___awdiv@sign
  1463  0165  0AC0               	incf	___awdiv@sign,f
  1464  0166                     l1050:	
  1465  0166  1FBD               	btfss	___awdiv@dividend+1,7
  1466  0167  2971               	goto	l1056
  1467  0168  09BC               	comf	___awdiv@dividend,f
  1468  0169  09BD               	comf	___awdiv@dividend+1,f
  1469  016A  0ABC               	incf	___awdiv@dividend,f
  1470  016B  1903               	skipnz
  1471  016C  0ABD               	incf	___awdiv@dividend+1,f
  1472  016D  3001               	movlw	1
  1473  016E  00BE               	movwf	??___awdiv
  1474  016F  083E               	movf	??___awdiv,w
  1475  0170  06C0               	xorwf	___awdiv@sign,f
  1476  0171                     l1056:	
  1477  0171  01C1               	clrf	___awdiv@quotient
  1478  0172  01C2               	clrf	___awdiv@quotient+1
  1479  0173  083A               	movf	___awdiv@divisor,w
  1480  0174  043B               	iorwf	___awdiv@divisor+1,w
  1481  0175  1903               	btfsc	3,2
  1482  0176  29A8               	goto	l1078
  1483  0177  01BF               	clrf	___awdiv@counter
  1484  0178  0ABF               	incf	___awdiv@counter,f
  1485  0179                     l1066:	
  1486  0179  1BBB               	btfsc	___awdiv@divisor+1,7
  1487  017A  2987               	goto	l1068
  1488  017B  3001               	movlw	1
  1489  017C                     u515:	
  1490  017C  1003               	clrc
  1491  017D  0DBA               	rlf	___awdiv@divisor,f
  1492  017E  0DBB               	rlf	___awdiv@divisor+1,f
  1493  017F  3EFF               	addlw	-1
  1494  0180  1D03               	skipz
  1495  0181  297C               	goto	u515
  1496  0182  3001               	movlw	1
  1497  0183  00BE               	movwf	??___awdiv
  1498  0184  083E               	movf	??___awdiv,w
  1499  0185  07BF               	addwf	___awdiv@counter,f
  1500  0186  2979               	goto	l1066
  1501  0187                     l1068:	
  1502  0187  3001               	movlw	1
  1503  0188                     u535:	
  1504  0188  1003               	clrc
  1505  0189  0DC1               	rlf	___awdiv@quotient,f
  1506  018A  0DC2               	rlf	___awdiv@quotient+1,f
  1507  018B  3EFF               	addlw	-1
  1508  018C  1D03               	skipz
  1509  018D  2988               	goto	u535
  1510  018E  083B               	movf	___awdiv@divisor+1,w
  1511  018F  023D               	subwf	___awdiv@dividend+1,w
  1512  0190  1D03               	skipz
  1513  0191  2994               	goto	u545
  1514  0192  083A               	movf	___awdiv@divisor,w
  1515  0193  023C               	subwf	___awdiv@dividend,w
  1516  0194                     u545:	
  1517  0194  1C03               	skipc
  1518  0195  299D               	goto	l1074
  1519  0196  083A               	movf	___awdiv@divisor,w
  1520  0197  02BC               	subwf	___awdiv@dividend,f
  1521  0198  083B               	movf	___awdiv@divisor+1,w
  1522  0199  1C03               	skipc
  1523  019A  03BD               	decf	___awdiv@dividend+1,f
  1524  019B  02BD               	subwf	___awdiv@dividend+1,f
  1525  019C  1441               	bsf	___awdiv@quotient,0
  1526  019D                     l1074:	
  1527  019D  3001               	movlw	1
  1528  019E                     u555:	
  1529  019E  1003               	clrc
  1530  019F  0CBB               	rrf	___awdiv@divisor+1,f
  1531  01A0  0CBA               	rrf	___awdiv@divisor,f
  1532  01A1  3EFF               	addlw	-1
  1533  01A2  1D03               	skipz
  1534  01A3  299E               	goto	u555
  1535  01A4  3001               	movlw	1
  1536  01A5  02BF               	subwf	___awdiv@counter,f
  1537  01A6  1D03               	btfss	3,2
  1538  01A7  2987               	goto	l1068
  1539  01A8                     l1078:	
  1540  01A8  0840               	movf	___awdiv@sign,w
  1541  01A9  1903               	btfsc	3,2
  1542  01AA  29B0               	goto	l1082
  1543  01AB  09C1               	comf	___awdiv@quotient,f
  1544  01AC  09C2               	comf	___awdiv@quotient+1,f
  1545  01AD  0AC1               	incf	___awdiv@quotient,f
  1546  01AE  1903               	skipnz
  1547  01AF  0AC2               	incf	___awdiv@quotient+1,f
  1548  01B0                     l1082:	
  1549  01B0  0842               	movf	___awdiv@quotient+1,w
  1550  01B1  00BB               	movwf	?___awdiv+1
  1551  01B2  0841               	movf	___awdiv@quotient,w
  1552  01B3  00BA               	movwf	?___awdiv
  1553  01B4  0008               	return
  1554  01B5                     __end_of___awdiv:	
  1555                           
  1556                           	psect	text8
  1557  02C4                     __ptext8:	
  1558 ;; *************** function _RelayOn *****************
  1559 ;; Defined at:
  1560 ;;		line 157 in file "main.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  flag            1    wreg     unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  flag            1    0[BANK0 ] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1574 ;;      Params:         0       0       0       0
  1575 ;;      Locals:         0       1       0       0
  1576 ;;      Temps:          0       0       0       0
  1577 ;;      Totals:         0       1       0       0
  1578 ;;Total ram usage:        1 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    2
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_InitSystem
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _RelayOn
  1590  02C4                     _RelayOn:	
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _RelayOn: [wreg+status,2+status,0]
  1594                           ;RelayOn@flag stored from wreg
  1595  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1596  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1597  02C6  00BA               	movwf	RelayOn@flag
  1598                           
  1599                           ;main.c: 158: if(flag == 0) PORTAbits.RA3 = 0;
  1600  02C7  083A               	movf	RelayOn@flag,w
  1601  02C8  1D03               	btfss	3,2
  1602  02C9  2ACC               	goto	l126
  1603  02CA  1185               	bcf	5,3	;volatile
  1604  02CB  0008               	return
  1605  02CC                     l126:	
  1606                           
  1607                           ;main.c: 159: else PORTAbits.RA3 = 1;
  1608  02CC  1585               	bsf	5,3	;volatile
  1609  02CD  0008               	return
  1610  02CE                     __end_of_RelayOn:	
  1611                           
  1612                           	psect	text9
  1613  02CE                     __ptext9:	
  1614 ;; *************** function _ReadEEPROM *****************
  1615 ;; Defined at:
  1616 ;;		line 162 in file "main.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  address         1    wreg     unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  address         1    0[BANK0 ] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      unsigned char 
  1623 ;; Registers used:
  1624 ;;		wreg
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1630 ;;      Params:         0       0       0       0
  1631 ;;      Locals:         0       1       0       0
  1632 ;;      Temps:          0       0       0       0
  1633 ;;      Totals:         0       1       0       0
  1634 ;;Total ram usage:        1 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    2
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_InitSystem
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _ReadEEPROM
  1646  02CE                     _ReadEEPROM:	
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _ReadEEPROM: [wreg]
  1650                           ;ReadEEPROM@address stored from wreg
  1651  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1652  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1653  02D0  00BA               	movwf	ReadEEPROM@address
  1654                           
  1655                           ;main.c: 163: EEADR = address;
  1656  02D1  083A               	movf	ReadEEPROM@address,w
  1657  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1658  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1659  02D4  009B               	movwf	27	;volatile
  1660                           
  1661                           ;main.c: 164: EECON1bits.RD = 1;
  1662  02D5  141C               	bsf	28,0	;volsfr
  1663                           
  1664                           ;main.c: 165: return EEDATA;
  1665  02D6  081A               	movf	26,w	;volatile
  1666  02D7  0008               	return
  1667  02D8                     __end_of_ReadEEPROM:	
  1668                           
  1669                           	psect	text10
  1670  01F3                     __ptext10:	
  1671 ;; *************** function _Delay_ms *****************
  1672 ;; Defined at:
  1673 ;;		line 150 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  delay           2    0[BANK0 ] unsigned int 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  j               2    4[BANK0 ] unsigned int 
  1678 ;;  i               2    2[BANK0 ] unsigned int 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1688 ;;      Params:         0       2       0       0
  1689 ;;      Locals:         0       4       0       0
  1690 ;;      Temps:          0       0       0       0
  1691 ;;      Totals:         0       6       0       0
  1692 ;;Total ram usage:        6 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    2
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _Delay_ms
  1704  01F3                     _Delay_ms:	
  1705                           
  1706                           ;main.c: 151: unsigned int i, j;
  1707                           ;main.c: 152: for(i = 0; i < delay; i++){
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _Delay_ms: [wreg+status,2]
  1711  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1712  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1713  01F5  01BC               	clrf	Delay_ms@i
  1714  01F6  01BD               	clrf	Delay_ms@i+1
  1715  01F7                     l118:	
  1716  01F7  083B               	movf	Delay_ms@delay+1,w
  1717  01F8  023D               	subwf	Delay_ms@i+1,w
  1718  01F9  1D03               	skipz
  1719  01FA  29FD               	goto	u705
  1720  01FB  083A               	movf	Delay_ms@delay,w
  1721  01FC  023C               	subwf	Delay_ms@i,w
  1722  01FD                     u705:	
  1723  01FD  1803               	btfsc	3,0
  1724  01FE  0008               	return
  1725                           
  1726                           ;main.c: 153: for(j = 0; j < 141; j++);
  1727  01FF  01BE               	clrf	Delay_ms@j
  1728  0200  01BF               	clrf	Delay_ms@j+1
  1729  0201  3000               	movlw	0
  1730  0202  023F               	subwf	Delay_ms@j+1,w
  1731  0203  308D               	movlw	141
  1732  0204  1903               	skipnz
  1733  0205  023E               	subwf	Delay_ms@j,w
  1734  0206  1803               	btfsc	3,0
  1735  0207  2A15               	goto	l1220
  1736  0208                     l1218:	
  1737  0208  3001               	movlw	1
  1738  0209  07BE               	addwf	Delay_ms@j,f
  1739  020A  1803               	skipnc
  1740  020B  0ABF               	incf	Delay_ms@j+1,f
  1741  020C  3000               	movlw	0
  1742  020D  07BF               	addwf	Delay_ms@j+1,f
  1743  020E  3000               	movlw	0
  1744  020F  023F               	subwf	Delay_ms@j+1,w
  1745  0210  308D               	movlw	141
  1746  0211  1903               	skipnz
  1747  0212  023E               	subwf	Delay_ms@j,w
  1748  0213  1C03               	skipc
  1749  0214  2A08               	goto	l1218
  1750  0215                     l1220:	
  1751  0215  3001               	movlw	1
  1752  0216  07BC               	addwf	Delay_ms@i,f
  1753  0217  1803               	skipnc
  1754  0218  0ABD               	incf	Delay_ms@i+1,f
  1755  0219  3000               	movlw	0
  1756  021A  07BD               	addwf	Delay_ms@i+1,f
  1757  021B  29F7               	goto	l118
  1758  021C                     __end_of_Delay_ms:	
  1759                           
  1760                           	psect	text11
  1761  023F                     __ptext11:	
  1762 ;; *************** function _ISR *****************
  1763 ;; Defined at:
  1764 ;;		line 31 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1778 ;;      Params:         0       0       0       0
  1779 ;;      Locals:         0       0       0       0
  1780 ;;      Temps:          5       0       0       0
  1781 ;;      Totals:         5       0       0       0
  1782 ;;Total ram usage:        5 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    1
  1785 ;; This function calls:
  1786 ;;		_button_reading
  1787 ;;		_start_timer1
  1788 ;;		_stop_timer1
  1789 ;;		_timer1_isr
  1790 ;; This function is called by:
  1791 ;;		Interrupt level 1
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _ISR
  1797  023F                     _ISR:	
  1798                           
  1799                           ;main.c: 32: if(TMR1IF == 1 && TMR1IE == 1){
  1800  023F  1C0C               	btfss	12,0	;volatile
  1801  0240  2A4C               	goto	i1l1236
  1802  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1803  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1804  0243  1C0C               	btfss	12,0	;volatile
  1805  0244  2A4C               	goto	i1l1236
  1806                           
  1807                           ;main.c: 33: stop_timer1();
  1808  0245  22F7               	fcall	_stop_timer1
  1809                           
  1810                           ;main.c: 34: TMR1IF = 0;
  1811  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0248  100C               	bcf	12,0	;volatile
  1814                           
  1815                           ;main.c: 35: start_timer1();
  1816  0249  22E9               	fcall	_start_timer1
  1817                           
  1818                           ;main.c: 36: timer1_isr();
  1819  024A  2291               	fcall	_timer1_isr
  1820                           
  1821                           ;main.c: 37: button_reading();
  1822  024B  20E2               	fcall	_button_reading
  1823  024C                     i1l1236:	
  1824                           
  1825                           ;main.c: 38: }
  1826                           ;main.c: 40: if(INTCONbits.INTF == 1){
  1827  024C  1C8B               	btfss	11,1	;volatile
  1828  024D  2A55               	goto	i1l77
  1829                           
  1830                           ;main.c: 41: INTCONbits.INTF = 0;
  1831  024E  108B               	bcf	11,1	;volatile
  1832                           
  1833                           ;main.c: 42: brewing_counter++;
  1834  024F  3001               	movlw	1
  1835  0250  00F4               	movwf	??_ISR
  1836  0251  0874               	movf	??_ISR,w
  1837  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0254  07B7               	addwf	_brewing_counter,f
  1840  0255                     i1l77:	
  1841  0255  0878               	movf	??_ISR+4,w
  1842  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0258  00FF               	movwf	127
  1845  0259  0877               	movf	??_ISR+3,w
  1846  025A  008A               	movwf	10
  1847  025B  0876               	movf	??_ISR+2,w
  1848  025C  0084               	movwf	4
  1849  025D  0E75               	swapf	(??_ISR+1)^(0+-128),w
  1850  025E  0083               	movwf	3
  1851  025F  0EFE               	swapf	126,f
  1852  0260  0E7E               	swapf	126,w
  1853  0261  0009               	retfie
  1854  0262                     __end_of_ISR:	
  1855                           
  1856                           	psect	intentry
  1857  0004                     __pintentry:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1860                           
  1861  0004                     interrupt_function:	
  1862  007E                     saved_w	set	btemp
  1863  0004  00FE               	movwf	btemp
  1864  0005  0E03               	swapf	3,w
  1865  0006  00F5               	movwf	??_ISR+1
  1866  0007  0804               	movf	4,w
  1867  0008  00F6               	movwf	??_ISR+2
  1868  0009  080A               	movf	10,w
  1869  000A  00F7               	movwf	??_ISR+3
  1870  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1871  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1872  000D  087F               	movf	btemp+1,w
  1873  000E  00F8               	movwf	??_ISR+4
  1874  000F  2A3F               	ljmp	_ISR
  1875                           
  1876                           	psect	text12
  1877  0291                     __ptext12:	
  1878 ;; *************** function _timer1_isr *****************
  1879 ;; Defined at:
  1880 ;;		line 36 in file "timer.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1894 ;;      Params:         0       0       0       0
  1895 ;;      Locals:         0       0       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_ISR
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _timer1_isr
  1909  0291                     _timer1_isr:	
  1910                           
  1911                           ;timer.c: 38: timer1_cnt ++;
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _timer1_isr: [wreg+status,2]
  1915  0291  3001               	movlw	1
  1916  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0294  07B2               	addwf	_timer1_cnt,f
  1919  0295  1803               	skipnc
  1920  0296  0AB3               	incf	_timer1_cnt+1,f
  1921  0297  3000               	movlw	0
  1922  0298  07B3               	addwf	_timer1_cnt+1,f
  1923                           
  1924                           ;timer.c: 39: if (timer1_cnt >= time1_MUL)
  1925  0299  0850               	movf	_time1_MUL+1,w
  1926  029A  0233               	subwf	_timer1_cnt+1,w
  1927  029B  1D03               	skipz
  1928  029C  2A9F               	goto	u59_25
  1929  029D  084F               	movf	_time1_MUL,w
  1930  029E  0232               	subwf	_timer1_cnt,w
  1931  029F                     u59_25:	
  1932  029F  1C03               	skipc
  1933  02A0  0008               	return
  1934                           
  1935                           ;timer.c: 40: {
  1936                           ;timer.c: 41: timer1_cnt = 0;
  1937  02A1  01B2               	clrf	_timer1_cnt
  1938  02A2  01B3               	clrf	_timer1_cnt+1
  1939                           
  1940                           ;timer.c: 42: flag_timer1 = 1;
  1941  02A3  01B8               	clrf	_flag_timer1
  1942  02A4  0AB8               	incf	_flag_timer1,f
  1943  02A5  0008               	return
  1944  02A6                     __end_of_timer1_isr:	
  1945                           
  1946                           	psect	text13
  1947  02F7                     __ptext13:	
  1948 ;; *************** function _stop_timer1 *****************
  1949 ;; Defined at:
  1950 ;;		line 32 in file "timer.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		None
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1964 ;;      Params:         0       0       0       0
  1965 ;;      Locals:         0       0       0       0
  1966 ;;      Temps:          0       0       0       0
  1967 ;;      Totals:         0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_ISR
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _stop_timer1
  1979  02F7                     _stop_timer1:	
  1980                           
  1981                           ;timer.c: 34: T1CONbits.TMR1ON = 0;
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _stop_timer1: []
  1985  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1986  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1987  02F9  1010               	bcf	16,0	;volatile
  1988  02FA  0008               	return
  1989  02FB                     __end_of_stop_timer1:	
  1990                           
  1991                           	psect	text14
  1992  02E9                     __ptext14:	
  1993 ;; *************** function _start_timer1 *****************
  1994 ;; Defined at:
  1995 ;;		line 26 in file "timer.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2009 ;;      Params:         0       0       0       0
  2010 ;;      Locals:         0       0       0       0
  2011 ;;      Temps:          0       0       0       0
  2012 ;;      Totals:         0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_ISR
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _start_timer1
  2024  02E9                     _start_timer1:	
  2025                           
  2026                           ;timer.c: 28: TMR1 = timer1_value;
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _start_timer1: [wreg]
  2030  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2031  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2032  02EB  0835               	movf	_timer1_value+1,w
  2033  02EC  008F               	movwf	15	;volatile
  2034  02ED  0834               	movf	_timer1_value,w
  2035  02EE  008E               	movwf	14	;volatile
  2036                           
  2037                           ;timer.c: 29: T1CONbits.TMR1ON = 1;
  2038  02EF  1410               	bsf	16,0	;volatile
  2039  02F0  0008               	return
  2040  02F1                     __end_of_start_timer1:	
  2041                           
  2042                           	psect	text15
  2043  00E2                     __ptext15:	
  2044 ;; *************** function _button_reading *****************
  2045 ;; Defined at:
  2046 ;;		line 16 in file "button.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  i               1    3[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2060 ;;      Params:         0       0       0       0
  2061 ;;      Locals:         1       0       0       0
  2062 ;;      Temps:          3       0       0       0
  2063 ;;      Totals:         4       0       0       0
  2064 ;;Total ram usage:        4 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_ISR
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _button_reading
  2075  00E2                     _button_reading:	
  2076                           
  2077                           ;button.c: 17: unsigned char i;
  2078                           ;button.c: 18: for(i = 0; i < 3; i++){
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _button_reading: [wreg-fsr0h+status,2+status,0]
  2082  00E2  01F3               	clrf	button_reading@i
  2083  00E3                     L5:	
  2084  00E3  3003               	movlw	3
  2085  00E4  0273               	subwf	button_reading@i,w
  2086  00E5  1803               	btfsc	3,0
  2087  00E6  0008               	return
  2088                           
  2089                           ;button.c: 19: debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
  2090  00E7  0873               	movf	button_reading@i,w
  2091  00E8  3E26               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  2092  00E9  0084               	movwf	4
  2093  00EA  1383               	bcf	3,7	;select IRP bank0
  2094  00EB  0800               	movf	0,w
  2095  00EC  00F0               	movwf	??_button_reading
  2096  00ED  0873               	movf	button_reading@i,w
  2097  00EE  3E29               	addlw	(low (_debounceButtonBuffer2| 0))& (0+255)
  2098  00EF  0084               	movwf	4
  2099  00F0  0870               	movf	??_button_reading,w
  2100  00F1  0080               	movwf	0
  2101                           
  2102                           ;button.c: 20: debounceButtonBuffer1[i] = PORTA & buttonInputMask[i];
  2103  00F2  0873               	movf	button_reading@i,w
  2104  00F3  3E4C               	addlw	(low (_buttonInputMask| 0))& (0+255)
  2105  00F4  0084               	movwf	4
  2106  00F5  0800               	movf	0,w
  2107  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2108  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2109  00F8  0505               	andwf	5,w	;volatile
  2110  00F9  00F0               	movwf	??_button_reading
  2111  00FA  0873               	movf	button_reading@i,w
  2112  00FB  3E26               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  2113  00FC  0084               	movwf	4
  2114  00FD  0870               	movf	??_button_reading,w
  2115  00FE  0080               	movwf	0
  2116                           
  2117                           ;button.c: 22: if(debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
  2118  00FF  0873               	movf	button_reading@i,w
  2119  0100  3E29               	addlw	(low (_debounceButtonBuffer2| 0))& (0+255)
  2120  0101  0084               	movwf	4
  2121  0102  0800               	movf	0,w
  2122  0103  00F0               	movwf	??_button_reading
  2123  0104  0873               	movf	button_reading@i,w
  2124  0105  3E26               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  2125  0106  0084               	movwf	4
  2126  0107  0800               	movf	0,w
  2127  0108  0670               	xorwf	??_button_reading,w
  2128  0109  1D03               	skipz
  2129  010A  2955               	goto	i1l1154
  2130                           
  2131                           ;button.c: 23: buttonBuffer[i] = debounceButtonBuffer1[i];
  2132  010B  0873               	movf	button_reading@i,w
  2133  010C  3E26               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  2134  010D  0084               	movwf	4
  2135  010E  0800               	movf	0,w
  2136  010F  00F0               	movwf	??_button_reading
  2137  0110  0873               	movf	button_reading@i,w
  2138  0111  3E49               	addlw	(low (_buttonBuffer| 0))& (0+255)
  2139  0112  0084               	movwf	4
  2140  0113  0870               	movf	??_button_reading,w
  2141  0114  0080               	movwf	0
  2142                           
  2143                           ;button.c: 24: if(buttonBuffer[i] == 0){
  2144  0115  0873               	movf	button_reading@i,w
  2145  0116  3E49               	addlw	(low (_buttonBuffer| 0))& (0+255)
  2146  0117  0084               	movwf	4
  2147  0118  0800               	movf	0,w
  2148  0119  1D03               	btfss	3,2
  2149  011A  293D               	goto	i1l1152
  2150                           
  2151                           ;button.c: 25: if(counterForButtonPress[i] < 200){
  2152  011B  0873               	movf	button_reading@i,w
  2153  011C  00F0               	movwf	??_button_reading
  2154  011D  0770               	addwf	??_button_reading,w
  2155  011E  3E20               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  2156  011F  0084               	movwf	4
  2157  0120  0800               	movf	0,w
  2158  0121  00F1               	movwf	??_button_reading+1
  2159  0122  0A84               	incf	4,f
  2160  0123  0800               	movf	0,w
  2161  0124  00F2               	movwf	??_button_reading+2
  2162  0125  3000               	movlw	0
  2163  0126  0272               	subwf	??_button_reading+2,w
  2164  0127  30C8               	movlw	200
  2165  0128  1903               	skipnz
  2166  0129  0271               	subwf	??_button_reading+1,w
  2167  012A  1803               	skipnc
  2168  012B  2937               	goto	i1l1150
  2169                           
  2170                           ;button.c: 26: counterForButtonPress[i]++;
  2171  012C  0873               	movf	button_reading@i,w
  2172  012D  00F0               	movwf	??_button_reading
  2173  012E  0770               	addwf	??_button_reading,w
  2174  012F  3E20               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  2175  0130  0084               	movwf	4
  2176  0131  3001               	movlw	1
  2177  0132  0780               	addwf	0,f
  2178  0133  0A84               	incf	4,f
  2179  0134  1803               	skipnc
  2180  0135  0A80               	incf	0,f
  2181                           
  2182                           ;button.c: 27: }
  2183  0136  2955               	goto	i1l1154
  2184  0137                     i1l1150:	
  2185                           
  2186                           ;button.c: 28: else flagForButtonPress_s[i] = 1;
  2187  0137  0873               	movf	button_reading@i,w
  2188  0138  3E2F               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  2189  0139  0084               	movwf	4
  2190  013A  0180               	clrf	0
  2191  013B  0A80               	incf	0,f
  2192                           
  2193                           ;button.c: 29: }
  2194  013C  2955               	goto	i1l1154
  2195  013D                     i1l1152:	
  2196                           
  2197                           ;button.c: 30: else{
  2198                           ;button.c: 32: flagForButtonPress[i] = counterForButtonPress[i];
  2199  013D  0873               	movf	button_reading@i,w
  2200  013E  00F0               	movwf	??_button_reading
  2201  013F  0770               	addwf	??_button_reading,w
  2202  0140  3E20               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  2203  0141  0084               	movwf	4
  2204  0142  0800               	movf	0,w
  2205  0143  00F1               	movwf	??_button_reading+1
  2206  0144  0873               	movf	button_reading@i,w
  2207  0145  3E2C               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  2208  0146  0084               	movwf	4
  2209  0147  0871               	movf	??_button_reading+1,w
  2210  0148  0080               	movwf	0
  2211                           
  2212                           ;button.c: 33: counterForButtonPress[i] = 0;
  2213  0149  0873               	movf	button_reading@i,w
  2214  014A  00F0               	movwf	??_button_reading
  2215  014B  0770               	addwf	??_button_reading,w
  2216  014C  3E20               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  2217  014D  0084               	movwf	4
  2218  014E  0180               	clrf	0
  2219  014F  0A84               	incf	4,f
  2220  0150  0180               	clrf	0
  2221                           
  2222                           ;button.c: 34: flagForButtonPress_s[i] = 0;
  2223  0151  0873               	movf	button_reading@i,w
  2224  0152  3E2F               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  2225  0153  0084               	movwf	4
  2226  0154  0180               	clrf	0
  2227  0155                     i1l1154:	
  2228  0155  3001               	movlw	1
  2229  0156  00F0               	movwf	??_button_reading
  2230  0157  0870               	movf	??_button_reading,w
  2231  0158  07F3               	addwf	button_reading@i,f
  2232  0159  28E3               	goto	L5
  2233  015A                     __end_of_button_reading:	
  2234  007E                     btemp	set	126	;btemp
  2235  007E                     wtemp	set	126
  2236  007E                     wtemp0	set	126
  2237  0080                     wtemp1	set	128
  2238  0082                     wtemp2	set	130
  2239  0084                     wtemp3	set	132
  2240  0086                     wtemp4	set	134
  2241  0088                     wtemp5	set	136
  2242  007F                     wtemp6	set	127
  2243  007E                     ttemp	set	126
  2244  007E                     ttemp0	set	126
  2245  0081                     ttemp1	set	129
  2246  0084                     ttemp2	set	132
  2247  0087                     ttemp3	set	135
  2248  007F                     ttemp4	set	127
  2249  007E                     ltemp	set	126
  2250  007E                     ltemp0	set	126
  2251  0082                     ltemp1	set	130
  2252  0086                     ltemp2	set	134
  2253  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         30
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     15      55
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_button_reading

Critical Paths under _main in BANK0

    _main->_InitSystem
    _InitSystem->_SetTimer1_ms
    _SetTimer1_ms->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1676
                                             13 BANK0      2     2      0
                           _Delay_ms
                         _InitSystem
                       _SetTimer1_ms
                        _WriteEEPROM
                  _is_button_pressed
                _is_button_pressed_s
 ---------------------------------------------------------------------------------
 (1) _is_button_pressed_s                                  1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _is_button_pressed                                    1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteEEPROM                                          2     1      1     150
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _InitSystem                                           2     2      0     706
                                             11 BANK0      2     2      0
                         _ReadEEPROM
                            _RelayOn
                       _SetTimer1_ms
                        _init_timer1
 ---------------------------------------------------------------------------------
 (2) _init_timer1                                          4     2      2      75
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetTimer1_ms                                         2     0      2     587
                                              9 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _RelayOn                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadEEPROM                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     4      2     145
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0     398
                                              4 COMMON     5     5      0
                     _button_reading
                       _start_timer1
                        _stop_timer1
                         _timer1_isr
 ---------------------------------------------------------------------------------
 (5) _timer1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _stop_timer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _start_timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _button_reading                                       4     4      0     398
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _InitSystem
     _ReadEEPROM
     _RelayOn
     _SetTimer1_ms
       ___awdiv
     _init_timer1
   _SetTimer1_ms
     ___awdiv
   _WriteEEPROM
   _is_button_pressed
   _is_button_pressed_s

 _ISR (ROOT)
   _button_reading
   _start_timer1
   _stop_timer1
   _timer1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      37       3       68.8%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      10        0.0%
ABS                  0      0      44       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Nov 26 07:45:17 2022

        __size_of_WriteEEPROM 001A         __size_of_start_timer1 0008                             pc 0002  
                 __CFG_CP$OFF 0000                            l97 008E                  ___awdiv@sign 0040  
                          fsr 0004                           l100 009C                           l118 01F7  
                         l126 02CC                           l134 0277                           _GIE 005F  
                __CFG_CPD$OFF 0000                           u515 017C                           _ISR 023F  
                         u535 0188                           u705 01FD                           u545 0194  
                         u555 019E                           u815 0098                           u835 00A6  
            ??_button_reading 0070                           fsr0 0004                           indf 0000  
                        S1388 02F1                  __CFG_LVP$OFF 0000                          ?_ISR 0070  
                        l1050 0166                          l1220 0215                          l1056 0171  
                        l1320 00CC                          l1312 00C2                          l1218 0208  
                        l1082 01B0                          l1074 019D                          l1066 0179  
                        l1306 00B8                          l1250 003A                          l1068 0187  
                        l1244 0030                          l1324 00D4                          l1078 01A8  
                        l1318 00CA                          l1262 0054                          l1254 0041  
                        l1326 00CD                          l1186 02BE                          l1274 0079  
                        l1266 0064                          l1258 004B                          l1196 02AF  
                        l1298 00AA         _counterForButtonPress 0020                          _PEIE 005E  
                        i1l77 0255                          _TMR1 000E                          _main 002E  
          _flagForButtonPress 002C                          _mode 0039                          btemp 007E  
                _start_timer1 02E9                          ltemp 007E                          start 0010  
                        ttemp 007E                          wtemp 007E                   _stop_timer1 02F7  
                       ??_ISR 0074               __end_of_RelayOn 02CE                         ?_main 0070  
             __end_of___awdiv 01B5                         _EEADR 009B                 __CFG_WDTE$OFF 0000  
                       _CMCON 001F               ___awdiv@divisor 003A               ___awdiv@counter 003F  
        _addressEEPROM_AUTO_0 0036          _addressEEPROM_AUTO_1 0051                         _PORTA 0005  
                       _PORTB 0006                         _TRISA 0085                         u59_25 029F  
                ?_init_timer1 003A                         _state 0079                __CFG_BOREN$OFF 0000  
                       pclath 000A                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                    _ReadEEPROM 02CE  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F              __end_of_Delay_ms 021C                __CFG_MCLRE$OFF 0000  
             __initialization 0011                  __end_of_main 00E2                    _InitSystem 01B5  
                      ??_main 0047           _is_button_pressed_s 02A6             ReadEEPROM@address 003A  
                      _EEDATA 009A                        _EECON2 009D              ___awdiv@dividend 003C  
                      i1l1150 0137                        i1l1152 013D                        i1l1154 0155  
                      i1l1236 024C                        _TMR1IE 0460                        _TMR1IF 0060  
              __CFG_PWRTE$OFF 0000                     ??_RelayOn 003A          ?_is_button_pressed_s 0070  
                   ??___awdiv 003E                 Delay_ms@delay 003A          _flagForButtonPress_s 002F  
             _buttonInputMask 004C              ___awdiv@quotient 0041                        saved_w 007E  
                 ?_ReadEEPROM 0070       __end_of__initialization 002C                   RelayOn@flag 003A  
       ??_is_button_pressed_s 003A                 ?_SetTimer1_ms 0043                __pcstackCOMMON 0070  
                __pidataBANK0 02D8                   ?_InitSystem 0070                _OPTION_REGbits 0081  
                   ?_Delay_ms 003A          __size_of_init_timer1 0023            _MAX_COUNTER_AUTO_0 0052  
          _MAX_COUNTER_AUTO_1 0054                    __pbssBANK0 0020                 ??_WriteEEPROM 003B  
              ??_SetTimer1_ms 0045                    __pmaintext 002E                  ?_stop_timer1 0070  
            _cleaning_counter 0056                    __pintentry 0004           __size_of_ReadEEPROM 000A  
            init_timer1@count 003A                    ??_Delay_ms 003C           __size_of_InitSystem 003E  
                     _RelayOn 02C4                       ___awdiv 015A           __end_of_WriteEEPROM 027C  
          WriteEEPROM@address 003B                       __ptext1 02A6                       __ptext2 02B5  
                     __ptext3 0262                       __ptext4 01B5                       __ptext5 021C  
                     __ptext6 027C                       __ptext7 015A                       __ptext8 02C4  
                     __ptext9 02CE                  __size_of_ISR 0023                     _T1CONbits 0010  
                     clrloop0 02E2          end_of_initialization 002C       __size_of_button_reading 0078  
                   Delay_ms@i 003C                     Delay_ms@j 003E         _debounceButtonBuffer1 0026  
       _debounceButtonBuffer2 0029                    _timer1_cnt 0032                    _timer1_isr 0291  
                   _PORTAbits 0005          __end_of_SetTimer1_ms 0291                  ??_ReadEEPROM 003A  
                 _WriteEEPROM 0262              SetTimer1_ms@time 0043                  ??_InitSystem 0045  
           _is_button_pressed 02B5          __size_of_stop_timer1 0004            ?_is_button_pressed 0070  
          __end_of_ReadEEPROM 02D8           start_initialization 0011           ??_is_button_pressed 003A  
                 __end_of_ISR 0262             __size_of_Delay_ms 0029   __end_of_is_button_pressed_s 02B5  
          __end_of_InitSystem 01F3                 ?_start_timer1 0070     __end_of_is_button_pressed 02C4  
                 ?_timer1_isr 0070                   __pdataBANK0 0049                 ??_init_timer1 003C  
                 __pbssCOMMON 0079                     ___latbits 0000                 __pcstackBANK0 003A  
              _button_reading 00E2                  _buttonBuffer 0049                ??_start_timer1 0070  
                   __pnvBANK0 0052      is_button_pressed_s@index 003A                      ?_RelayOn 0070  
             button_reading@i 0073                      ?___awdiv 003A         __size_of_SetTimer1_ms 0015  
                   __pswtext1 02F1                   _flag_timer1 0038        __end_of_button_reading 015A  
         __size_of_timer1_isr 0015           __end_of_init_timer1 023F             interrupt_function 0004  
                   _time1_MUL 004F                     clear_ram0 02E1                  _SetTimer1_ms 027C  
                    _PIR1bits 000C    __size_of_is_button_pressed 000F                     _pumpState 007C  
                    _Delay_ms 01F3               ?_button_reading 0070                    _EECON1bits 009C  
                ?_WriteEEPROM 003A              __size_of_RelayOn 000A              __size_of___awdiv 005B  
        __end_of_start_timer1 02F1                   _init_timer1 021C                      __ptext10 01F3  
                    __ptext11 023F                      __ptext12 0291                      __ptext13 02F7  
                    __ptext14 02E9                      __ptext15 00E2                 __size_of_main 00B4  
               ??_stop_timer1 0070                  ??_timer1_isr 0070               _brewing_counter 0037  
                _timer1_value 0034                    _INTCONbits 000B        is_button_pressed@index 003A  
                    intlevel1 0000            __end_of_timer1_isr 02A6               WriteEEPROM@data 003A  
__size_of_is_button_pressed_s 000F           __end_of_stop_timer1 02FB            __CFG_FOSC$INTOSCIO 0000  
